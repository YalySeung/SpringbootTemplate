plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5' // 또는 2.7.17
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.sprinboottemplate'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starter
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// DB 드라이버 (예: H2 or MySQL or MariaDB or Oracle)
	runtimeOnly 'com.h2database:h2' // 테스트용 내장 DB
	// runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB 사용 시
	// runtimeOnly 'com.oracle.database.jdbc:ojdbc8' // Oracle 사용 시

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Swagger (springdoc-openapi)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// QueryDSL (선택)
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa"
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
	main.java.srcDirs += querydslDir
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	options.annotationProcessorGeneratedSourcesDirectory = querydslDir
}
